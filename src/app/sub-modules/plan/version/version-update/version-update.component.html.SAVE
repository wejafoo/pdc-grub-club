


<div id="page-title" class="bg-d">
	<h2>Plan ID:<strong>{{planId}}</strong> Version:<strong>{{versionId+1}}</strong></h2>
	<mat-icon style="visibility: hidden">add</mat-icon>
</div>
<div id="page-body">
	<div id="page-title-2">
		<div><h3>Schedule</h3></div>
		<div *ngIf="deepEqual(ver, ver); else changes_made">
			{{deepEqual(ver, ver)}} <a class="gc-disabled">Save</a><a (click)="toVersions()">Back</a>
		</div>
		<ng-template #changes_made>
			<div>
				<a (click)="save()">Save</a>
				<a [routerLink]="['/plan', planId, 'version', 's']">Cancel</a>
			</div>
		</ng-template>
	</div>
	<hr>
	<div style="margin: .5rem;">
		<h4><label for="editVer-labels">Version Labels</label></h4>
		<input type="text" id="editVer-labels" [(ngModel)]="ver['labels']" placeholder="labels">
	</div>
	<div>
		<mat-accordion>
			<!-- #########################################  HOST CONFIGURATIONS  ##-->
			<mat-expansion-panel [expanded]="step === 0" (opened)="setStep(0)">
				<mat-expansion-panel-header class="bg f c">
					<mat-panel-title><mat-icon>person</mat-icon><strong>Hosting</strong></mat-panel-title>
					<mat-panel-description>Schedule hosts for this event</mat-panel-description>
				</mat-expansion-panel-header>
				<hr>
				<div class="events" *ngFor="let evt of events">
					<div class="event-heading bg f">
						<div class="f"><h4><strong>{{evt}}</strong> Hostings </h4></div>
						<div class="f">
							Auto-assign: <button (click)="autoAllocate('all')">All</button>
							<button (click)="autoAllocate(evt)">{{evt}}</button>
						</div>
					</div>
					<table *ngIf="loaded" cdkDropListGroup>
						<tr class="f">
							<th class="f l"><strong>Unallocated</strong></th>
							<th class="f"><strong>Summary</strong></th>
							<th class="f r"><strong>Allocated</strong></th>
						</tr>
						<tr class="f">
							<!-- ##################################  UN-ASSIGNED HOSTS  ###-->
							<td cdkDropList id="unallocated" class="f l gutter"
								[cdkDropListData]="unHs[evt]" (cdkDropListDropped)="unDropHost( $event, evt )"
							>
								<div *ngFor="let unH of unHs[evt]">
									<mat-card cdkDrag [cdkDragData]="unH" [cdkDragDisabled]="unH['isDisabled']">
										<mat-icon class="menu">menu</mat-icon> {{unH['hostKey']}}
									</mat-card>
								</div>
							</td>
							<!-- ##############################  EVENT HOSTING SUMMARY  ###-->
							<td class="fc median">
								<div>
									<div class="bg c"><strong>Guests</strong></div>
									<div>
										RSVPs received:
										<strong><i>{{summary[evt]['rsvps']}}</i></strong>
									</div>
									<div class="bg c"><strong>Seats</strong></div>
									<div>
										<div>
											Total Available:
											<strong><i>{{summary[evt]['seats']}}</i></strong>
										</div>
										<div>
											Unallocated:
											<strong><i>{{summary[evt]['unAllocatedSeatCnt']}}</i></strong>
										</div>
										<div>
											Allocated:
											<strong><i>{{summary[evt]['allocatedSeatCnt']}}</i></strong>
										</div>
									</div>
									<div class="bg c"><strong>Allocation Over/Under</strong></div>
									<div [class]="summary[evt]['overAllocatedSeats']>= 0?'not-full':'full'">
										<div>
											RSVPs:
											<strong><i>{{
												summary[evt]['overAllocatedSeats'] > 0 ? '+' +
													summary[evt]['overAllocatedSeats'] :
														summary[evt]['overAllocatedSeats'] < 0 ?
															summary[evt]['overAllocatedSeats'] : '---'
											}}</i></strong>
										</div>
									</div>
								</div>
								<div>
									<div class="bg c"><strong>Status Key</strong></div>
									<div class="cdk-drag-disabled"><i>host disabled</i></div>
									<div class="bg"><i>host active</i></div>
									<div class="bg-m" style="border-style: solid; border-color: green">
										<i>event fully allocated</i>
									</div>
									<div class="bg-m"  style="border-style: solid; border-color: red;">
										<i>event under allocated</i>
									</div>
								</div>
							</td>
							<!-- #####################################  ASSIGNED HOSTS  ###-->
							<td cdkDropList id="allocated"
								*ngIf="loaded || summary[evt] !== undefined" [class] = "
									summary[evt]['overAllocatedSeats'] >= 0 ?
										'f r gutter assigned plan-list full' :
											'f r gutter assigned plan-list not-full'
								" [cdkDropListData]="aHs[evt]" (cdkDropListDropped)="dropHost($event, evt)"
							>
								<div *ngFor="let aH of aHs[evt]">
									<mat-card cdkDrag id="{{aH['hostKey']}}" [cdkDragData]="aH">
										<mat-icon class="menu">menu</mat-icon> {{aH['hostKey']}}
									</mat-card>
								</div>
							</td>
						</tr>
					</table>
				</div>
				<mat-action-row>
					<button (click)="prevStep()">Previous</button>
					<button (click)="nextStep()">Next</button>
				</mat-action-row>
			</mat-expansion-panel>
			<!-- #########################################  GUEST CONFIGURATION  ##-->
			<mat-expansion-panel [expanded]="step === 1" (opened)="setStep(1)">
				<mat-expansion-panel-header class="bg f c">
					<mat-panel-title><mat-icon>people</mat-icon><strong>Guesting</strong></mat-panel-title>
					<mat-panel-description>Schedule guests for this event</mat-panel-description>
				</mat-expansion-panel-header>
				<hr>
				<div *ngFor="let evt of events" class="events">
					<div class="event-heading bg f">
						<div class="f">
							<h4>
								<strong>
									{{evt}}
									Guestings
								</strong>
							</h4>
						</div>
						<div class="f">
							Auto-assign:
							<button (click)="autoAssign('all')">
								All
							</button>
							<button (click)="autoAssign(evt)">
								{{evt}}
							</button>
						</div>
					</div>
					<table *ngIf="loaded" cdkDropListGroup>
						<tr class="f">
							<th class="f l"><strong>Unassigned</strong></th>
							<th class="f"><strong>Summary</strong></th>
							<th class="f r"><strong>Assigned</strong></th>
						</tr>
						<tr class="f">
							<!-- ################################  UN-ASSIGNED GUESTS  ### -->
							<td cdkDropList id="unassigned" class="f l gutter unassigned list"
								[cdkDropListData]="unGs[evt]" (cdkDropListDropped)="unDropGuest($event, evt)"
							>
								<div *ngFor="let unG of unGs[evt]">
									<mat-card cdkDrag id="{{unG['guestKey']}}"
										[cdkDragData]="unG" [cdkDragDisabled]="unG['isDisabled']"
									><mat-icon class="menu">menu</mat-icon> {{unG['guestKey']}}</mat-card>
								</div>
							</td>
							<!-- ################################  EVENT GUEST SUMMARY  ###-->
							<td class="fc median">
								<div>
									<div class="bg c"><strong>Guests</strong></div>
									<div>
										RSVPs Received: <strong><i>{{summary[evt]['rsvps']}}</i></strong>
									</div>
									<div>
										Unassigned: <strong><i>{{summary[evt]['unAssignedGuestCnt']}}</i></strong>
									</div>
									<div>
										Assigned: <strong><i>{{summary[evt]['assignedGuestCnt']}}</i></strong>
									</div>
								</div>
								<div>
									<div class="bg c"><strong> Seats </strong></div>
									<div>
										<div>Total Available: <strong><i>{{summary[evt]['seats']}}</i></strong></div>
										<div>Allocated: <strong><i>{{summary[evt]['allocatedSeatCnt']}}</i></strong></div>
									</div>
								</div>
								<div>
									<div class="bg c"><strong>Allocation Over/Under</strong></div>
									<div [class]="summary[evt]['overAllocatedSeats']>=0?'not-full':'full'">
										RSVPs: <strong><i>{{
						  				summary[evt]['overAllocatedSeats'] > 0 ? '+' +
							  				summary[evt]['overAllocatedSeats'] :
							  					summary[evt]['overAllocatedSeats'] < 0 ?
								  					summary[evt]['overAllocatedSeats'] : '---'
											}}</i></strong>
									</div>
									<div [class]="summary[evt]['overAssignedGuests']>=0?'full': 'not-full'">
										Assigned: <strong><i>{{
						  				summary[evt]['overAssignedGuests'] > 0 ? '+'  +
							  				summary[evt]['overAssignedGuests'] :
							  					summary[evt]['overAssignedGuests'] < 0 ?
								  					summary[evt]['overAssignedGuests'] : '---'
										}}</i></strong>
									</div>
								</div>
								<div>
									<div class="bg c"><strong>Status Key</strong></div>
									<div class="c" style="background-color: orange; color: aliceblue;"><strong><i>under assigned</i></strong></div>
									<div class="c" style="background-color: darkgreen; color: aliceblue;"><strong><i>fully assigned</i></strong></div>
									<div class="c" style="background-color: red; color: aliceblue;"><strong><i>over assigned</i></strong></div>
								</div>
								<div class="f c">
									<button (click)="isOpen=!isOpen">{{isOpen? "Peeps View": "Card View"}}</button>
								</div>
							</td>
							<!-- ####################################  ASSIGNED GUESTS  ###-->
							<td class="f r gutter">
								<div *ngFor="let aH of aHs[evt]"
										 cdkDropList [id]="aH['hostKey']"
										 [cdkDropListData]="aGs[evt][aH['hostKey']]"
										 (cdkDropListDropped)="dropGuest($event, evt)"
										 [cdkDropListEnterPredicate]="pairsPredicate()"
								>
									<div class="fr">
										<div style="display: inline-block;">{{aH['hostKey']}}</div>
										<div style="display: inline-block; color: red;">+3</div>
									</div>
									<!-- #################  ASSIGNED GUESTS - PEEPS VIEW  ###-->
									<div *ngIf="summary[evt][aH['hostKey']]">
										<div [class]="
											summary[evt][aH['hostKey']]['assignedSeatCnt'] < aH['seats'] ?
												'polyBase poly-'+aH['seats']+' not-full-host'	:
													summary[evt][aH['hostKey']]['assignedSeatCnt'] > aH['seats'] ?
														'polyBase poly-'+aH['seats']+' over-full-host' :
															'polyBase poly-'+aH['seats']+' full-host'
										" *ngIf = "! isOpen; else boxView">
											<div [class]="'poly-content-'+aH['seats']">
												<div *ngFor="let cnt of [].constructor(aH['seats']); let i = index">
													<mat-icon id="peep-1" class="assigned-guest-host peep" *ngIf="i <= summary[evt][aH['hostKey']]['hosts'].length-1; else notHost"
													>person</mat-icon>
													<ng-template #notHost>
														<mat-icon id="peep-2" class="assigned-guest-guest peep" *ngIf="
															i <= summary[evt][aH['hostKey']]['assignedSeatCnt']-1; else notAssigned
														">person</mat-icon>
														<ng-template #notAssigned>
															<mat-icon id="peep-o" class="unassigned-guest peep">
																person_outline
															</mat-icon>
														</ng-template>
													</ng-template>
												</div>
											</div>
										</div>
										<!-- ################### ASSIGNED GUESTS-CARD VIEW  ###-->
										<ng-template #boxView>
											<div [class]="
												summary[evt][aH['hostKey']]['assignedSeatCnt'] < aH['seats'] ?
													'polyBase plan-list not-full-host' :
														summary[evt][aH['hostKey']]['assignedSeatCnt'] > aH['seats'] ?
															'polyBase plan-list over-full-host' :
																'polyBase plan-list full-host'
											">
												<div *ngFor="let aG of aGs[evt][aH['hostKey']]">
													<mat-card	cdkDrag id="{{aG['guestKey']}}"
																[cdkDragData]="aG"
																[cdkDragDisabled]="aG['isDisabled']"
													>
														<mat-icon class="menu">menu</mat-icon> {{aG['guestKey']}}
													</mat-card>
												</div>
											</div>
										</ng-template>
									</div>
								</div>
							</td>
						</tr>
					</table>
				</div>
				<mat-action-row>
					<button (click)="prevStep()">Previous</button>
					<button (click)="nextStep()">End</button>
				</mat-action-row>
			</mat-expansion-panel>
		</mat-accordion>
	</div>
</div>
