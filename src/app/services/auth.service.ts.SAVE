


import { Injectable			} from '@angular/core';
import { AngularFireAuth	} from '@angular/fire/auth';
import { Router				} from '@angular/router';
import { NgZone				} from '@angular/core';
import { auth				} from 'firebase/app';

@Injectable({ providedIn: 'root' })
export class AuthService {
	userData: any;																// User data var
	constructor(
		public afAuth: AngularFireAuth,											// Inject Firebase auth service
		public router: Router,
		public ngZone: NgZone													// NgZone service to remove outside scope warning
	) {
		this.afAuth.authState.subscribe(user => {							// Saving user data as an object in localstorage if logged out than set to null
			if (user) {
				this.userData = user;											// Setting up user data in userData var
				localStorage.setItem( 'user', JSON.stringify( this.userData));
				JSON.parse( localStorage.getItem('user' ));
			} else {
				localStorage.setItem( 'user', null );
				JSON.parse( localStorage.getItem('user' ));
			}
		})
	}
																		// Sign in with email/password
	SignIn(email, password) { return this.afAuth.auth.signInWithEmailAndPassword(email, password).then((result) => { this.ngZone.run(() => { this.router.navigate(['/plan', 's']).then() })}).catch((error) => { window.alert( error.message )})}
																		// Sign in with Google
	GoogleAuth() { return this.AuthLogin(new auth.GoogleAuthProvider())}
																		// Auth logic to run auth providers
	AuthLogin(provider) { return this.afAuth.auth.signInWithPopup(provider).then((result) => { this.ngZone.run(() => { this.router.navigate(['/plan', 's']).then() })}).catch((error) => { window.alert(error)})}
																		// Sign out
	SignOut() { return this.afAuth.auth.signOut().then(() => { localStorage.removeItem('user'); this.router.navigate(['sign-in']).then()})}
}
